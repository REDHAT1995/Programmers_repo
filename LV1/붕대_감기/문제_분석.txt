[문제 분석]

1. 요구사항 분석
   - 시간별 체력 회복 처리
   - 연속 성공 시 추가 회복
   - 공격 시 체력 감소
   - 최대 체력 제한
   - 사망 여부 확인

2. 제약사항 분석
   a) bandage 배열
      - 시전 시간: 1~50
      - 초당 회복량: 1~100
      - 추가 회복량: 1~100
   
   b) health
      - 범위: 1~1,000
   
   c) attacks 배열
      - 길이: 1~100
      - 공격 시간: 1~1,000
      - 피해량: 1~100
      - 오름차순 정렬됨
      - 중복 시간 없음

3. 데이터 구조 설계
   a) 상태 변수
      - current_health: 현재 체력
      - continuous_success: 연속 성공 시간
      - current_time: 현재 시간
   
   b) 입력 데이터
      - cast_time: 시전 시간
      - heal_per_second: 초당 회복량
      - additional_heal: 추가 회복량
      - max_health: 최대 체력
      - attack_times: 공격 시간 목록
      - damages: 피해량 목록

4. 알고리즘 설계
   a) 초기화
      - 현재 체력 = 최대 체력
      - 연속 성공 = 0
      - 현재 시간 = 0
   
   b) 시간별 처리
      - 공격 시간 체크
      - 회복량 계산
      - 체력 상태 업데이트
   
   c) 결과 판정
      - 체력 0 이하: -1 반환
      - 생존: 남은 체력 반환

5. 시간 복잡도 분석
   - 전체 시간: O(T)
     * T: 마지막 공격 시간
   - 공격 처리: O(1)
   - 회복 처리: O(1)

6. 공간 복잡도 분석
   - 상태 변수: O(1)
   - 입력 데이터: O(N)
     * N: 공격 횟수

7. 예외 처리
   a) 체력 관련
      - 최대 체력 초과 방지
      - 0 이하 체력 확인
   
   b) 시간 관련
      - 첫 공격 이전 회복
      - 공격 사이 회복
      - 마지막 공격 처리 