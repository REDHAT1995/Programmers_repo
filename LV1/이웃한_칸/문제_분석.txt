[문제 분석]

1. 요구사항 분석
   - 2차원 보드에서 특정 위치 선택
   - 상하좌우 이웃한 칸 확인
   - 같은 색상 개수 카운트
   - 보드 범위 체크

2. 제약사항 분석
   a) 보드 크기
      - 최소 1x1
      - 최대 7x7
      - 정사각형 형태
   
   b) 색상 문자열
      - 최소 1자
      - 최대 10자
      - 영어 소문자만
   
   c) 위치 범위
      - 0 이상
      - 보드 크기 미만

3. 데이터 구조 설계
   a) 입력 데이터
      - board: 2차원 문자열 리스트
      - h: 세로 위치 정수
      - w: 가로 위치 정수
   
   b) 방향 배열
      - dh: 세로 방향 이동 [-1, 1, 0, 0]
      - dw: 가로 방향 이동 [0, 0, -1, 1]

4. 알고리즘 설계
   a) 초기화
      - 보드 크기 확인
      - 카운터 초기화
      - 현재 위치 색상 저장
   
   b) 이웃한 칸 확인
      - 4방향 순회
      - 범위 체크
      - 색상 비교
   
   c) 결과 반환
      - 카운트 값 반환

5. 시간 복잡도 분석
   - 방향 순회: O(1) (상수 4)
   - 전체 시간 복잡도: O(1)

6. 공간 복잡도 분석
   - 추가 변수: O(1)
   - 방향 배열: O(1)
   - 전체 공간 복잡도: O(1)

7. 예외 처리
   a) 범위 검사
      - 음수 인덱스 방지
      - 보드 크기 초과 방지
   
   b) 입력 유효성
      - board가 비어있지 않은지 확인
      - h, w가 유효한 범위인지 확인 