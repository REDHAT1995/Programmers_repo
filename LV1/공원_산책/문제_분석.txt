# 공원 산책 - 문제 분석

## 문제 접근 방법
1. 시작 위치(S) 찾기
2. 각 명령어 처리
   - 방향과 거리 분리
   - 이동 가능 여부 확인
   - 이동 실행
3. 최종 위치 반환

## 사용할 알고리즘
- 2차원 배열 탐색
- 문자열 처리
- 조건 분기 처리

## 시간/공간 복잡도 분석
### 시간 복잡도
- 시작 위치 찾기: O(N*M) (N: 세로 길이, M: 가로 길이)
- 명령어 처리: O(K*L) (K: 명령어 수, L: 최대 이동 거리)
- 전체 시간 복잡도: O(N*M + K*L)

### 공간 복잡도
- 입력 공간: O(N*M)
- 추가 공간: O(1)
- 전체 공간 복잡도: O(N*M)

## 최적화 포인트
1. 시작 위치는 한 번만 찾기
2. 이동 가능 여부 확인 시 불필요한 반복 제거
3. 방향 정보는 미리 정의하여 재사용

## 고려사항
1. 입력값 검증
   - 공원 크기 제한 (3 ≤ 길이 ≤ 50)
   - 명령어 형식 검증
   - 이동 거리 범위 확인 (1 ≤ n ≤ 9)

2. 예외 처리
   - 공원 경계를 벗어나는 경우
   - 장애물을 만나는 경우
   - 잘못된 명령어 형식

3. 테스트 케이스 고려
   - 기본 이동
   - 장애물 회피
   - 경계 처리
   - 복합 이동 