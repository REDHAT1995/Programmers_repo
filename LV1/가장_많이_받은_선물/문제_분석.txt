[문제 분석]

1. 요구사항 분석
   - 선물 주고받은 기록 처리
   - 선물 지수 계산
   - 다음 달 선물 예측
   - 최대 선물 수 계산

2. 제약사항 분석
   - 2 ≤ friends 길이 ≤ 50
   - friends 원소는 10자 이하 알파벳 소문자
   - 1 ≤ gifts 길이 ≤ 10,000
   - gifts 원소는 "A B" 형태 문자열

3. 데이터 구조 설계
   a) 선물 기록 저장
      - 2차원 딕셔너리 사용
      - gift_records[giver][receiver] = 선물 횟수
   
   b) 선물 카운트 저장
      - 딕셔너리 사용
      - gift_count[friend] = {"given": 준 선물 수, "received": 받은 선물 수}
   
   c) 선물 지수 저장
      - 딕셔너리 사용
      - gift_index[friend] = 선물 지수

4. 알고리즘 설계
   a) 선물 기록 처리
      - gifts 배열 순회
      - 주고받은 선물 카운트
      - 선물 지수 계산
   
   b) 다음 달 선물 계산
      - 모든 친구 쌍 비교
      - 선물 기록 비교
      - 선물 지수 비교
      - 선물 받을 사람 결정

5. 시간 복잡도 분석
   - 선물 기록 처리: O(M)
     * M: gifts 배열 길이
   - 친구 쌍 비교: O(N²)
     * N: friends 배열 길이
   - 전체 시간 복잡도: O(N² + M)

6. 공간 복잡도 분석
   - gift_records: O(N²)
   - gift_count: O(N)
   - gift_index: O(N)
   - 전체 공간 복잡도: O(N²)

7. 예외 처리
   - 선물 기록이 없는 경우
   - 선물 주고받은 수가 같은 경우
   - 선물 지수가 같은 경우
   - 최대값이 0인 경우 