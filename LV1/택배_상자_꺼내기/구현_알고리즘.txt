# 택배 상자 꺼내기 구현 알고리즘

## 알고리즘 구현 단계

1. 상자 위치 계산
   ```python
   # 층 계산
   floor = (num - 1) // w
   
   # 열 계산
   if floor % 2 == 0:
       col = (num - 1) % w
   else:
       col = w - 1 - ((num - 1) % w)
   ```

2. 위에 있는 상자 개수 계산
   ```python
   # 현재 층 위의 모든 상자 개수
   boxes_above = n - (floor * w + col + 1)
   ```

3. 결과 반환
   ```python
   return boxes_above + 1  # +1은 현재 상자
   ```

## 핵심 로직 설명
1. 층 계산
   - (num - 1) // w로 현재 상자가 있는 층을 계산
   - 0부터 시작하는 층 번호 사용

2. 열 계산
   - 짝수 층: 왼쪽에서 오른쪽으로
   - 홀수 층: 오른쪽에서 왼쪽으로
   - w - 1 - col로 홀수 층의 열 위치 계산

3. 위에 있는 상자 계산
   - 전체 상자 수에서 현재 위치까지의 상자 수를 뺌
   - 현재 상자도 포함하여 +1

## 예외 처리
1. 입력값 검증
   ```python
   if not (2 <= n <= 100 and 1 <= w <= 10 and 1 <= num <= n):
       raise ValueError("Invalid input parameters")
   ```

2. 경계 조건 처리
   - 마지막 층이 완전하지 않은 경우 고려
   - n이 w의 배수인 경우 고려

## 최적화 기법
1. 수학적 계산 사용
   - 2차원 배열 대신 수학적 공식으로 위치 계산
   - O(1) 공간 복잡도 달성

2. 조건문 최적화
   - 불필요한 조건문 제거
   - 단순화된 계산식 사용 